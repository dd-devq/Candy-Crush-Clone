(()=>{"use strict";var e,t={348:(e,t,i)=>{var s=i(260),h=i.n(s);class r extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(10016391),this.createLoadingbar(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(16774867,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)}),this),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.atlas("flares","assets/particles/flares.png","assets/particles/flares.json"),this.load.pack("preload","./assets/pack.json","preload")}update(){this.scene.start("GameScene")}createLoadingbar(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(6139463,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}const l={score:0,highscore:0,gridWidth:8,gridHeight:8,tileWidth:80,tileHeight:90,candyTypes:["cookie1","croissant","cupcake","donut","macaroon","starcookie1"]};class o extends Phaser.GameObjects.Image{constructor(e,t,i){super(e.scene,e.x,e.y,e.texture,e.frame),this.isBurst=!1,this.setOrigin(.5).setInteractive(),this.setupEffect(),this.scene.add.existing(this),this.tileGraphics=this.scene.add.graphics(),this.gridX=t,this.gridY=i}setupEffect(){this.selectEffect=this.scene.tweens.add({targets:this,scaleX:1.1,scaleY:.9,repeat:-1,yoyo:!0,duration:200,ease:"Linear"}).pause()}setupParticles(){const e=new Phaser.Geom.Rectangle(0,0,l.tileWidth,l.tileHeight);this.particleEmitter=this.scene.add.particles(this.x-l.tileWidth/2,this.y-l.tileHeight/2,"flares",{frame:{frames:["white","blue"],cycle:!1},blendMode:"ADD",lifespan:75,quantity:3,scale:{start:.25,end:0}}),this.particleEmitter.addEmitZone({type:"random",source:e,quantity:64,total:1})}backToPosition(){const e=this.gridX*l.tileWidth+l.tileWidth/2,t=this.gridY*l.tileHeight+l.tileHeight/2;this.scene.add.tween({targets:this,x:e,y:t,rotation:0,ease:"cubic.inout",repeat:0,duration:750,onCompleteScope:this})}setRandomTextures(){const e=l.candyTypes[Phaser.Math.RND.between(0,l.candyTypes.length-1)];this.texture.key=e}showSelectEffect(){this.selectEffect.resume(),this.tileGraphics.lineStyle(2,16250871,1),this.tileGraphics.strokeRoundedRect(this.x-l.tileWidth/2,this.y-l.tileHeight/2,l.tileWidth,l.tileHeight,10)}deselect(){this.selectEffect.pause(),this.setScale(1),this.tileGraphics.clear()}explode(){this.setupParticles(),setTimeout((()=>{this.particleEmitter.destroy()}),200)}burst(e){this.burstParticleEmitter=e?this.scene.add.particles(this.x,this.y,"flares",{frame:"white",color:[9887962,9666291],colorEase:"quart.out",lifespan:500,angle:{min:-150,max:-50},scale:{start:.5,end:0,ease:"sine.in"},speed:{min:100,max:150},advance:100,blendMode:"ADD"}).setDepth(-1):this.scene.add.particles(this.x,this.y,"flares",{frame:"white",color:[16436258,16291840,16266752,10421252],colorEase:"quad.out",lifespan:1250,angle:{min:-150,max:-50},scale:{start:.5,end:0,ease:"sine.out"},speed:100,advance:1e3,blendMode:"ADD"}).setDepth(-1)}stopBurst(){this.burstParticleEmitter&&(this.burstParticleEmitter.setActive(!1).setVisible(!1),this.burstParticleEmitter.stop())}showIdleEffect(){this.idleEffect=this.scene.tweens.add({targets:this,rotation:Phaser.Math.PI2,repeat:0,duration:500,ease:"sine.out",onComplete:()=>{this.idleEffect.destroy()},onCompleteScope:this})}showMatchEffect(){}getKey(){return this.texture.key}update(){this.isBurst&&(this.burstParticleEmitter.x=this.x,this.burstParticleEmitter.y=this.y)}}class a extends Phaser.Scene{constructor(){super({key:"GameScene"}),this.grid=new Map,this.idleTime=0,this.IDLE_TIME=15e3}create(){this.canMove=!0,this.cameras.main.setBackgroundColor(7908062);for(let e=0;e<l.gridHeight;e++)for(let t=0;t<l.gridWidth;t++){const i=this.addTile(e,t);this.grid.set(this.indexToKey(e,t),i)}this.shuffle(),this.firstSelectedTile=void 0,this.secondSelectedTile=void 0,this.input.on("gameobjectdown",this.tileDown,this)}update(e,t){this.IDLE_TIME<=this.idleTime&&(this.grid.forEach((e=>{null==e||e.showIdleEffect()})),this.idleTime=0),this.idleTime+=t,this.grid.forEach((e=>{null==e||e.update()}))}addTile(e,t){const i=l.candyTypes[Phaser.Math.RND.between(0,l.candyTypes.length-1)];return new o({scene:this,x:this.cameras.main.width/2,y:this.cameras.main.height/2,texture:i},e,t)}shuffle(){const e=this.getShuffleShape();for(let t=0;t<l.gridHeight;t++)for(let i=0;i<l.gridWidth;i++){const s=this.grid.get(this.indexToKey(t,i)),h={value:(t*l.gridHeight+i)/(l.gridHeight*l.gridWidth)},r=this.getPointFromShape(e,h.value);void 0!==s&&(s.x=r.x,s.y=r.y),this.tweens.add({targets:h,value:h.value+1,duration:1e3,repeat:0,ease:"sine.out",onComplete:()=>{null==s||s.backToPosition()},onCompleteScope:this,onUpdate:()=>{h.value>1&&(h.value-=1);const t=this.getPointFromShape(e,h.value);void 0!==s&&(s.x=t.x,s.y=t.y)},onUpdateScope:this})}setTimeout((()=>{this.checkMatches()}),2100)}getPointFromShape(e,t){return e instanceof Phaser.Geom.Rectangle?Phaser.Geom.Rectangle.GetPoint(e,t):Phaser.Geom.Circle.GetPoint(e,t)}getShuffleShape(){const e=Phaser.Math.RND.between(0,1),t=this.cameras.main.width/2,i=this.cameras.main.width/2;return 0==e?new Phaser.Geom.Rectangle(t-200,i-200,400,400):new Phaser.Geom.Circle(t,i,225)}getTileKey(e,t){return((e-l.tileWidth/2)/l.tileWidth).toString()+((t-l.tileHeight/2)/l.tileHeight).toString()}tileDown(e,t){this.canMove&&(this.idleTime=0,void 0===this.firstSelectedTile?(this.firstSelectedTile=t,this.firstSelectedTile.showSelectEffect()):this.isAdjacentTile(this.firstSelectedTile,t)?(this.canMove=!1,this.firstSelectedTile.deselect(),this.firstSelectedTile===t?(this.firstSelectedTile=void 0,this.canMove=!0):(this.secondSelectedTile=t,this.swapTiles())):(this.firstSelectedTile.deselect(),this.firstSelectedTile=t,this.firstSelectedTile.showSelectEffect()))}isAdjacentTile(e,t){const i=Math.abs(e.x-t.x)/l.tileWidth,s=Math.abs(e.y-t.y)/l.tileHeight;return 1===i&&0===s||0===i&&1===s||0===i&&0===s}resetTiles(){this.firstSelectedTile=void 0,this.secondSelectedTile=void 0,this.canMove=!0}swapTiles(){var e,t,i,s,h,r,l,o;if(void 0!==this.firstSelectedTile&&void 0!==this.secondSelectedTile){this.idleTime=0,this.grid.set(this.getTileKey(null===(e=this.firstSelectedTile)||void 0===e?void 0:e.x,null===(t=this.firstSelectedTile)||void 0===t?void 0:t.y),this.secondSelectedTile),this.grid.set(this.getTileKey(null===(i=this.secondSelectedTile)||void 0===i?void 0:i.x,null===(s=this.secondSelectedTile)||void 0===s?void 0:s.y),this.firstSelectedTile);const a=this.add.tween({targets:this.firstSelectedTile,x:this.secondSelectedTile.x,y:this.secondSelectedTile.y,rotation:Phaser.Math.PI2,ease:"sine.inout",duration:500,repeat:0,yoyo:!1}),d=this.add.tween({targets:this.secondSelectedTile,x:this.firstSelectedTile.x,y:this.firstSelectedTile.y,rotation:Phaser.Math.PI2,ease:"sine.inout",duration:500,repeat:0,yoyo:!1,onComplete:()=>{a.destroy(),d.destroy(),this.checkMatches()}});this.firstSelectedTile=this.grid.get(this.getTileKey(null===(h=this.firstSelectedTile)||void 0===h?void 0:h.x,null===(r=this.firstSelectedTile)||void 0===r?void 0:r.y)),this.secondSelectedTile=this.grid.get(this.getTileKey(null===(l=this.secondSelectedTile)||void 0===l?void 0:l.x,null===(o=this.secondSelectedTile)||void 0===o?void 0:o.y))}}checkMatches(){const e=this.getMatches();if(e.length>0){for(const t of e)3==t.length?this.handle3Mathces(t):this.handleGreaterThan3Mathces(t);this.checkTweensComplete().then((()=>{this.updateGrid()})),this.checkTweensComplete().then((()=>{this.fillTiles(),this.checkTweensComplete().then((()=>{this.checkMatches()}))}))}else this.swapTiles();this.resetTiles()}handle3Mathces(e){for(const t of e){const i=this.grid.get(t);i&&i.isBurst&&(e=e.concat(this.getAdjacentBurstTiles(t)),i.isBurst=!1)}for(const t of e){const e=this.grid.get(t);null==e||e.stopBurst(),null==e||e.explode(),null==e||e.setActive(!1).setVisible(!1),this.grid.set(t,void 0)}}getAdjacentBurstTiles(e){const t={0:{x:-1,y:-1},1:{x:-1,y:0},2:{x:-1,y:1},3:{x:0,y:-1},4:{x:0,y:1},5:{x:1,y:-1},6:{x:1,y:0},7:{x:1,y:1}},i=parseInt(e[0]),s=parseInt(e[1]),h=[];for(let e=0;e<8;e++){const r=this.indexToKey(i+t[e].x,s+t[e].y);void 0!==this.grid.get(r)&&h.push(r)}return h}handleGreaterThan3Mathces(e){var t,i;for(let s=0;s<e.length;s++)if(s!==e.length-1){const h=this.grid.get(e[s]);this.tweens.add({targets:h,x:null===(t=this.grid.get(e[e.length-1]))||void 0===t?void 0:t.x,y:null===(i=this.grid.get(e[e.length-1]))||void 0===i?void 0:i.y,duration:250,ease:"sine.in",repeat:0,yoyo:!1,onComplete:()=>{null==h||h.stopBurst(),null==h||h.explode(),null==h||h.setActive(!1).setVisible(!1),this.grid.set(e[s],void 0),this.cameras.main.shake(150,.0075)},onCompleteScope:this})}const s=this.grid.get(e[e.length-1]);s&&(s.isBurst=!0,4==e.length?s.burst(!1):s.burst(!0))}checkTweensComplete(){return new Promise((e=>{const t=()=>{0===this.tweens.getTweens().filter((e=>e.isPlaying())).length?e():setTimeout(t,100)};t()}))}indexToKey(e,t){return e.toString()+t.toString()}getMatches(){const e=[];let t=[];for(let i=0;i<l.gridWidth;i++){let s=1;for(let h=0;h<l.gridHeight-1;h++){const r=this.grid.get(this.indexToKey(i,h)),o=this.grid.get(this.indexToKey(i,h+1));if(r&&o)if(r.getKey()===o.getKey()){if(s+=1,h==l.gridHeight-2&&s>=3){for(let e=h-s+2;e<=h+1;e++)t.push(this.indexToKey(i,e));e.push(t),t=[]}}else{if(s>=3){for(let e=h-s+1;e<h+1;e++)t.push(this.indexToKey(i,e));e.push(t),t=[]}s=1}}}for(let i=0;i<l.gridWidth;i++){let s=1;for(let h=0;h<l.gridHeight-1;h++){const r=this.grid.get(this.indexToKey(h,i)),o=this.grid.get(this.indexToKey(h+1,i));if(r&&o)if(r.getKey()===o.getKey()){if(s+=1,h==l.gridHeight-2&&s>=3){for(let e=h-s+2;e<=h+1;e++)t.push(this.indexToKey(e,i));e.push(t),t=[]}}else{if(s>=3){for(let e=h-s+1;e<h+1;e++)t.push(this.indexToKey(e,i));e.push(t),t=[]}s=1}}}return e}updateGrid(){for(let e=l.gridWidth-1;e>=0;e--)for(let t=l.gridHeight-1;t>0;t--){const i=this.grid.get(this.indexToKey(e,t)),s=this.grid.get(this.indexToKey(e,t-1));void 0===i&&void 0!==s&&(this.grid.set(this.indexToKey(e,t),s),this.grid.set(this.indexToKey(e,t-1),void 0),this.add.tween({targets:s,y:l.tileHeight*t+l.tileHeight/2,ease:"sine.inout",duration:400,repeat:0,yoyo:!1,onComplete:()=>{},onCompleteScope:this}),t=l.gridHeight)}}fillTiles(){for(let e=l.gridWidth-1;e>=0;e--)for(let t=l.gridHeight-1;t>=0;t--)if(void 0===this.grid.get(this.indexToKey(e,t))){const i=e*l.tileWidth+l.tileWidth/2,s=-1*l.tileHeight+l.tileHeight/2,h=this.addTile(e,t);h.setX(i),h.setY(s),this.grid.set(this.indexToKey(e,t),h),this.add.tween({targets:h,y:l.tileHeight*t+l.tileHeight/2,ease:"sine.inout",duration:300,repeat:0,yoyo:!1,onComplete:()=>{},onCompleteScope:this})}}}const d={title:"Candy crush",version:"2.0",width:640,height:window.innerHeight,type:Phaser.AUTO,parent:"game",scene:[r,a],backgroundColor:"#de3412",render:{pixelArt:!1,antialias:!0}};class n extends h().Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new n(d)}))}},i={};function s(e){var h=i[e];if(void 0!==h)return h.exports;var r=i[e]={exports:{}};return t[e].call(r.exports,r,r.exports,s),r.exports}s.m=t,e=[],s.O=(t,i,h,r)=>{if(!i){var l=1/0;for(n=0;n<e.length;n++){for(var[i,h,r]=e[n],o=!0,a=0;a<i.length;a++)(!1&r||l>=r)&&Object.keys(s.O).every((e=>s.O[e](i[a])))?i.splice(a--,1):(o=!1,r<l&&(l=r));if(o){e.splice(n--,1);var d=h();void 0!==d&&(t=d)}}return t}r=r||0;for(var n=e.length;n>0&&e[n-1][2]>r;n--)e[n]=e[n-1];e[n]=[i,h,r]},s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};s.O.j=t=>0===e[t];var t=(t,i)=>{var h,r,[l,o,a]=i,d=0;if(l.some((t=>0!==e[t]))){for(h in o)s.o(o,h)&&(s.m[h]=o[h]);if(a)var n=a(s)}for(t&&t(i);d<l.length;d++)r=l[d],s.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return s.O(n)},i=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var h=s.O(void 0,[216],(()=>s(348)));h=s.O(h)})();